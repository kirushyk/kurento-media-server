/* Autogenerated with kurento-module-creator */

#ifndef __STATS_HPP__
#define __STATS_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class StatsType;
} /* kurento */

namespace kurento
{
class Stats;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::Stats> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{
class StatsType;


class Stats : public RegisterParent 
{

public:

  Stats (const std::string &id, std::shared_ptr<StatsType> type, double timestamp) {
    this->id = id;
    this->type = type;
    this->timestamp = timestamp;
  };

  void setId (const std::string &id) {
    this->id = id;
  };

  std::string getId () {
    return id;
  };

  void setType (std::shared_ptr<StatsType> type) {
    this->type = type;
  };

  std::shared_ptr<StatsType> getType () {
    return type;
  };

  void setTimestamp (double timestamp) {
    this->timestamp = timestamp;
  };

  double getTimestamp () {
    return timestamp;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new Stats ();

    };

    RegisterParent::registerType ("kurento.Stats", func);
  }

protected:

  Stats() {};

private:

  std::string id;
  std::shared_ptr<StatsType> type;
  double timestamp;

  friend void kurento::Serialize (std::shared_ptr<kurento::Stats> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __STATS_HPP__ */
