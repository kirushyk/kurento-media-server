/* Autogenerated with kurento-module-creator */

#ifndef __ALPHA_BLENDING_HPP__
#define __ALPHA_BLENDING_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "Hub.hpp"

namespace kurento
{
class AlphaBlending;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::AlphaBlending> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
class HubPort;
} /* kurento */

namespace kurento
{
class AlphaBlending : public virtual Hub
{

public:
  AlphaBlending () {};
  virtual ~AlphaBlending () {};

  virtual void setMaster (std::shared_ptr<HubPort> source, int zOrder) = 0;
  virtual void setPortProperties (float relativeX, float relativeY, int zOrder, float relativeWidth, float relativeHeight, std::shared_ptr<HubPort> port) = 0;

  virtual std::string getType () const {
    return "AlphaBlending";
  }

  virtual std::string getModule () const {
    return "kurento";
  }

  virtual void Serialize (JsonSerializer &serializer) = 0;

};

} /* kurento */

#endif /*  __ALPHA_BLENDING_HPP__ */
