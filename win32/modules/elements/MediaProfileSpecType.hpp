/* Autogenerated with kurento-module-creator */

#ifndef __MEDIA_PROFILE_SPEC_TYPE_HPP__
#define __MEDIA_PROFILE_SPEC_TYPE_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>


namespace kurento
{
class MediaProfileSpecType;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::MediaProfileSpecType> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class MediaProfileSpecType
{

public:

  typedef enum {
    WEBM,
    MP4,
    WEBM_VIDEO_ONLY,
    WEBM_AUDIO_ONLY,
    MP4_VIDEO_ONLY,
    MP4_AUDIO_ONLY,
    KURENTO_SPLIT_RECORDER
  } type;

  MediaProfileSpecType (const std::string &value) {
    enumValue = getValueFromString (value);
  };

  MediaProfileSpecType (type value) {
    this->enumValue = value;
  }

  type getValue () {
    return enumValue;
  };

  std::string getString () {

    if (enumValue ==  WEBM) {
      return "WEBM";
    }

    if (enumValue ==  MP4) {
      return "MP4";
    }

    if (enumValue ==  WEBM_VIDEO_ONLY) {
      return "WEBM_VIDEO_ONLY";
    }

    if (enumValue ==  WEBM_AUDIO_ONLY) {
      return "WEBM_AUDIO_ONLY";
    }

    if (enumValue ==  MP4_VIDEO_ONLY) {
      return "MP4_VIDEO_ONLY";
    }

    if (enumValue ==  MP4_AUDIO_ONLY) {
      return "MP4_AUDIO_ONLY";
    }

    if (enumValue ==  KURENTO_SPLIT_RECORDER) {
      return "KURENTO_SPLIT_RECORDER";
    }

    return "";
  }

  void Serialize (JsonSerializer &s);

  MediaProfileSpecType() {};

private:

  static type getValueFromString (const std::string &value);

  type enumValue;

  friend void kurento::Serialize (std::shared_ptr<kurento::MediaProfileSpecType> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __MEDIA_PROFILE_SPEC_TYPE_HPP__ */
