/* Autogenerated with kurento-module-creator */

#ifndef __SERVER_MANAGER_IMPL_HPP__
#define __SERVER_MANAGER_IMPL_HPP__

#include "MediaObjectImpl.hpp"
#include "ServerManager.hpp"
#include <EventHandler.hpp>
#include <boost/property_tree/ptree.hpp>
#include <ModuleManager.hpp>

namespace kurento
{
class ServerManagerImpl;
} /* kurento */

namespace kurento
{
void Serialize (std::shared_ptr<kurento::ServerManagerImpl> &object,
                JsonSerializer &serializer);
} /* kurento */

namespace kurento
{
class ServerInfo;
class MediaPipelineImpl;
} /* kurento */

namespace kurento
{

class ServerManagerImpl : public MediaObjectImpl, public virtual ServerManager
{

public:

  ServerManagerImpl (const std::shared_ptr<ServerInfo> info,
                     const boost::property_tree::ptree &config,
                     ModuleManager &moduleManager);

  virtual ~ServerManagerImpl () {};

  std::string getKmd (const std::string &moduleName);

  virtual std::shared_ptr<ServerInfo> getInfo ();

  virtual std::vector<std::shared_ptr<MediaPipeline>> getPipelines ();

  virtual std::vector<std::string> getSessions ();

  virtual std::string getId() override
  {
    return "manager_ServerManager";
  }

  virtual std::string getMetadata ();

  /* Next methods are automatically implemented by code generator */
  virtual bool connect (const std::string &eventType,
                        std::shared_ptr<EventHandler> handler);

  sigc::signal<void, ObjectCreated> signalObjectCreated;
  sigc::signal<void, ObjectDestroyed> signalObjectDestroyed;
  virtual void invoke (std::shared_ptr<MediaObjectImpl> obj,
                       const std::string &methodName, const Json::Value &params,
                       Json::Value &response);

  virtual void Serialize (JsonSerializer &serializer);

private:

  std::shared_ptr<ServerInfo> info;
  std::string metadata;

  ModuleManager &moduleManager;

  class StaticConstructor
  {
  public:
    StaticConstructor();
  };

  static StaticConstructor staticConstructor;

};

} /* kurento */

#endif /*  __SERVER_MANAGER_IMPL_HPP__ */
