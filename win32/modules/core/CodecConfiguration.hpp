/* Autogenerated with kurento-module-creator */

#ifndef __CODEC_CONFIGURATION_HPP__
#define __CODEC_CONFIGURATION_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <RegisterParent.hpp>


namespace kurento
{
class CodecConfiguration;
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::CodecConfiguration> &object, JsonSerializer &s);
} /* kurento */

namespace kurento
{

class CodecConfiguration : public RegisterParent 
{

public:

  CodecConfiguration (const std::string &name) {
    this->name = name;
  };

  void setName (const std::string &name) {
    this->name = name;
  };

  std::string getName () {
    return name;
  };

  void setProperties (const std::map <std::string,std::string> &properties) {
    this->properties = properties;
    __isSetProperties = true;
  };

  std::map <std::string,std::string> getProperties () {
    return properties;
  };

  bool isSetProperties () {
    return __isSetProperties;
  };

  virtual void Serialize (JsonSerializer &s);

  static void registerType () {
    std::function<RegisterParent*(void)> func =
        [] () {

      return new CodecConfiguration ();

    };

    RegisterParent::registerType ("kurento.CodecConfiguration", func);
  }

protected:

  CodecConfiguration() {};

private:

  std::string name;
  std::map <std::string,std::string> properties;
  bool __isSetProperties = false;

  friend void kurento::Serialize (std::shared_ptr<kurento::CodecConfiguration> &object, JsonSerializer &s);

};

} /* kurento */

#endif /*  __CODEC_CONFIGURATION_HPP__ */
